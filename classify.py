import sys
import numpy as np
import pandas as pd

from utils.eval import evaluate
from lib.preprocessing.preprocess import MSC, SG
from lib.model.svm import Svm
from lib.model.knn import Knn
from lib.model.mlknn import Mlknn
from sklearn.model_selection import train_test_split

def transform_to_index(x):
	y = [eval(i) for i in x]
	z = [int((j - 700) / 2) for j in y]
	return z

def raw(x):
	return x

def msc(x):
	x, _ = MSC(x)
	return x

def msc_sg1222(x):
	x = SG(x, 'SG_w5_p2_d1')
	x, _ = MSC(x)
	return x

def sg1222_msc(x):
	x, _ = MSC(x)
	x = SG(x, 'SG_w5_p2_d1')
	return x

def wave_combination(i):
	n1 = [w for w in range(101)] #700-900
	n2 = [w for w in range(230, 281)] #700-900 + 1210
	n3 = [w for w in range(350, 401)] #700-900 + 1450
	n4 = [w for w in range(500, 551)] #700-900 + 1750
	n5 = [w for w in range(600, 651)] #700-900 + 1950
	n6 = [w for w in range(725, 776)] #700-900 + 2150
	n7 = [w for w in range(825, 876)] #700-900 + 2350

	w1 = [w for w in range(0, 900)] #700-2500
	w2 = [w for w in range(200, 900)] #1100-2500

	s31_raw = ['706', '720', '1044', '1048', '1068', '1080', '1082', '1084', '1086', '1094', '1096', '1110', '1122', '1204', '1336', '1602', '1608', '1616', '1620', '1624', '1650', '1660', '1736', '1742', '1798', '1816', '2046', '2052', '2312', '2318', '2468']
	s13_raw = ['1044', '1082', '1086', '1094', '1110', '1122', '1204', '1620', '1650', '1736', '1816', '2052', '2318']
	s67_msc = ['1064', '1078', '1082', '1084', '1094', '1098', '1100', '1102', '1108', '1110', '1114', '1122', '1124', '1128', '1134', '1144', '1176', '1182', '1314', '1318', '1320', '1322', '1414', '1418', '1428', '1472', '1588', '1602', '1604', '1606', '1618', '1620', '1638', '1648', '1650', '1656', '1658', '1660', '1662', '1664', '1666', '1668', '1670', '1674', '1722', '1726', '1728', '1730', '1732', '1738', '1740', '1744', '1746', '1762', '1766', '1772', '2044', '2048', '2124', '2170', '2226', '2306', '2308', '2342', '2344', '2354', '2358']
	s168_msc_sg = ['700', '708', '774', '796', '804', '806', '838', '868', '870', '872', 
	'876', '880', '882', '888', '922', '984', '988', '990', '1040', '1058', '1060', '1062', '1068', '1070', 
	'1072', '1074', '1076', '1078', '1080', '1082', '1084', '1106', '1110', '1112', '1114', '1116', '1118', '1120', '1122', '1124', '1126', '1130', '1132', '1134', '1136', 
	'1138', '1140', '1142', '1144', '1150', '1154', '1156', '1158', '1162', '1164', '1166', '1170', '1178', '1186', '1282', '1284', '1290', '1326', '1338', '1340', '1342', 
	'1346', '1350', '1352', '1360', '1362', '1364', '1436', '1438', '1442', '1446', '1448', '1452', '1458', '1462', '1476', '1478', '1482', '1516', '1520', '1522', '1538', 
	'1548', '1570', '1578', '1586', '1592', '1662', '1664', '1670', '1676', '1678', '1680', '1682', '1684', '1686', '1688', '1690', '1696', '1698', '1700', '1702', '1704', 
	'1706', '1722', '1726', '1728', '1732', '1734', '1762', '1764', '1766', '1768', '1770', '1802', '1804', '1808', '1812', '1816', '1818', '1820', '1822', '1844', '1882', 
	'1942', '1968', '2002', '2018', '2026', '2032', '2034', '2036', '2038', '2042', '2044', '2060', '2062', '2064', '2066', '2068', '2070', '2072', '2130', '2164', '2174', 
	'2176', '2210', '2214', '2296', '2302', '2304', '2324', '2326', '2336', '2378', '2388', '2394', '2402', '2420', '2448', '2482', '2490', '2496']
	s78_sg_msc = ['878', '1112', '1116', '1118', '1120', '1124', '1128', '1130', '1136', '1140', '1142', '1146', '1152', '1154', '1156', '1158', '1160', '1166', '1168', '1170', '1176', '1278', '1284', '1286', '1296', '1300', '1352', '1354', '1412', '1434', '1442', '1516', '1562', '1632', '1634', '1660', '1674', '1676', '1678', '1684', '1686', '1688', '1692', '1696', '1710', '1718', '1720', '1728', '1730', '1740', '1760', '1764', '1810', '1812', '1816', '1858', '1860', '1868', '1888', '1948', '2052', '2056', '2060', '2062', '2066', '2068', '2070', '2142', '2214', '2216', '2292', '2296', '2298', '2302', '2326', '2350', '2478', '2486']
	
	s353_raw_vip = ['700', '702', '704', '706', '708', '710', '712', '714', '716', '718', '720', '722', '724', '726', '728', '730', '732', '734', '736', '738', '740', '742', '744', '746', '748', '750', '752', '754', '756', '758', '760', '762', '764', '766', '768', '770', '772', '774', '776', '778', '780', '782', '784', '786', '788', '790', '792', '794', '796', '798', '800', '802', '804', '806', '808', '810', '812', '814', '816', '818', '820', '822', '824', '826', '828', '830', '832', '834', '836', '838', '840', '842', '844', '846', '848', '850', '852', '854', '856', '858', '860', '862', '864', '866', '868', '870', '872', '874', '876', '878', '880', '882', '884', '886', '888', '890', '892', '894', '896', '898', '900', '902', '904', '906', '908', '910', '912', '914', '916', '918', '920', '922', '924', '926', '928', '930', '932', '934', '936', '938', '940', '942', '944', '946', '948', '950', '952', '954', '956', '958', '960', '962', '964', '966', '968', '970', '972', '974', '976', '978', '980', '982', '984', '986', '988', '990', '992', '994', '996', '998', '1000', '1002', '1004', '1006', '1008', '1010', '1012', '1014', '1016', '1018', '1020', '1022', '1024', '1026', '1028', '1030', '1032', '1034', '1036', '1038', '1040', '1042', '1044', '1046', '1048', '1050', '1052', '1054', '1056', '1058', '1060', '1062', '1064', '1066', '1068', '1070', '1072', '1074', '1076', '1078', '1080', '1082', '1084', '1086', '1088', '1090', '1092', '1094', '1096', '1098', '1100', '1102', '1104', '1106', '1108', '1110', '1112', '1114', '1116', '1118', '1120', '1122', '1124', '1126', '1128', '1130', '1132', '1134', '1136', '1138', '1140', '1142', '1144', '1146', '1148', '1150', '1152', '1154', '1156', '1158', '1160', '1162', '1164', '1166', '1168', '1170', '1172', '1174', '1176', '1178', '1180', '1182', '1184', '1186', '1188', '1190', '1192', '1194', '1196', '1198', '1200', '1202', '1204', '1206', '1208', '1210', '1212', '1214', '1216', '1218', '1220', '1222', '1224', '1226', '1228', '1230', '1232', '1234', '1236', '1238', '1240', '1242', '1244', '1246', '1248', '1250', '1252', '1254', '1256', '1258', '1260', '1262', '1264', '1266', '1268', '1270', '1272', '1274', '1276', '1278', '1280', '1282', '1284', '1286', '1288', '1290', '1292', '1294', '1296', '1298', '1300', '1302', '1304', '1306', '1308', '1310', '1312', '1314', '1316', '1318', '1320', '1322', '1324', '1326', '1328', '1330', '1332', '1334', '1336', '1338', '1340', '1342', '1344', '1346', '1348', '1350', '1352', '1926', '1928', '1930', '1932', '1934', '1936', '1938', '1940', '1942', '1944', '1946', '1948', '1950', '1952', '1954', '1956', '1958', '1960', '1962', '1964', '1966', '1968', '1970', '1972', '1974', '1976']
	s522_sg_msc_vip = ['704', '706', '708', '710', '712', '714', '716', '718', '720', '722', '724', '726', '728', '730', '732', '734', '736', '738', '740', '742', '744', '746', '748', '750', '752', '754', '756', '758', '760', '762', '764', '766', '768', '770', '772', '774', '776', '778', '780', '782', '784', '786', '788', '790', '792', '794', '796', '798', '800', '802', '804', '806', '808', '810', '812', '814', '816', '818', '820', '822', '824', '826', '828', '830', '832', '834', '836', '838', '840', '842', '844', '846', '848', '850', '852', '854', '856', '858', '860', '862', '864', '866', '868', '870', '872', '874', '876', '878', '880', '882', '884', '886', '888', '890', '892', '894', '896', '898', '900', '902', '904', '906', '908', '910', '912', '914', '916', '918', '920', '922', '924', '926', '928', '930', '932', '934', '936', '938', '940', '942', '944', '946', '948', '950', '952', '954', '956', '958', '960', '962', '964', '966', '968', '970', '972', '974', '976', '978', '980', '982', '984', '986', '988', '990', '992', '994', '996', '998', '1000', '1002', '1004', '1006', '1008', '1010', '1012', '1014', '1016', '1018', '1020', '1022', '1024', '1026', '1104', '1106', '1108', '1110', '1112', '1114', '1116', '1118', '1120', '1122', '1124', '1126', '1128', '1130', '1132', '1134', '1136', '1138', '1140', '1142', '1144', '1146', '1148', '1150', '1152', '1154', '1156', '1158', '1160', '1162', '1164', '1166', '1168', '1170', '1172', '1174', '1176', '1178', '1180', '1182', '1184', '1186', '1188', '1190', '1192', '1194', '1196', '1198', '1200', '1202', '1204', '1206', '1208', '1210', '1212', '1238', '1240', '1242', '1244', '1246', '1248', '1250', '1252', '1254', '1256', '1258', '1260', '1262', '1264', '1266', '1268', '1270', '1272', '1274', '1276', '1278', '1280', '1282', '1284', '1286', '1288', '1290', '1292', '1294', '1296', '1298', '1300', '1302', '1304', '1306', '1308', '1310', '1312', '1314', '1316', '1318', '1320', '1322', '1324', '1326', '1328', '1330', '1332', '1334', '1336', '1338', '1340', '1342', '1344', '1346', '1348', '1350', '1352', '1358', '1360', '1362', '1364', '1366', '1368', '1370', '1372', '1374', '1376', '1378', '1380', '1382', '1384', '1386', '1388', '1390', '1392', '1394', '1396', '1398', '1400', '1402', '1404', '1406', '1408', '1410', '1466', '1468', '1470', '1472', '1474', '1614', '1616', '1618', '1620', '1622', '1624', '1626', '1628', '1630', '1632', '1634', '1636', '1638', '1640', '1658', '1660', '1662', '1664', '1666', '1668', '1670', '1672', '1674', '1676', '1678', '1680', '1682', '1684', '1686', '1688', '1690', '1692', '1694', '1696', '1698', '1700', '1702', '1704', '1706', '1714', '1716', '1718', '1720', '1722', '1724', '1726', '1728', '1730', '1744', '1746', '1748', '1750', '1752', '1768', '1770', '1772', '1774', '1776', '1778', '1780', '1782', '1784', '1786', '1788', '1790', '1792', '1794', '1796', '1798', '1800', '1802', '1804', '1848', '1850', '1852', '1940', '1942', '1944', '1946', '2028', '2030', '2032', '2034', '2036', '2038', '2040', '2042', '2044', '2046', '2048', '2050', '2052', '2054', '2056', '2058', '2060', '2062', '2064', '2066', '2068', '2070', '2072', '2074', '2076', '2078', '2080', '2082', '2084', '2086', '2088', '2090', '2092', '2094', '2096', '2098', '2100', '2102', '2104', '2106', '2108', '2110', '2112', '2114', '2116', '2118', '2120', '2122', '2124', '2126', '2128', '2130', '2132', '2134', '2136', '2188', '2190', '2192', '2194', '2196', '2198', '2200', '2202', '2204', '2206', '2208', '2210', '2212', '2214', '2238', '2240', '2242', '2244', '2246', '2248', '2250', '2252', '2254', '2256', '2258', '2260', '2262', '2264', '2266', '2268', '2270', '2272', '2274', '2276', '2278', '2280', '2282', '2284', '2286', '2288', '2290', '2292', '2294', '2296', '2298', '2300', '2302', '2304', '2306', '2308', '2310', '2312', '2314', '2316', '2318', '2320', '2322', '2334', '2336', '2338', '2340', '2374', '2376', '2378', '2380', '2382', '2394', '2410', '2412', '2472', '2474', '2476', '2478', '2480', '2482', '2484', '2486', '2488', '2490', '2492', '2494']
	s418_msc_vip = ['700', '702', '704', '706', '708', '710', '712', '714', '716', '718', '720', '722', '724', '726', '728', '730', '732', '734', '736', '738', '740', '742', '744', '746', '748', '750', '752', '754', '756', '758', '760', '762', '764', '766', '768', '770', '772', '774', '776', '778', '780', '782', '784', '786', '788', '790', '792', '794', '796', '798', '800', '802', '804', '806', '808', '810', '812', '814', '816', '818', '820', '822', '824', '826', '828', '830', '832', '834', '836', '838', '840', '842', '844', '846', '848', '850', '852', '854', '856', '858', '860', '862', '864', '866', '868', '870', '872', '874', '876', '878', '880', '882', '884', '886', '888', '890', '892', '894', '896', '898', '900', '902', '904', '906', '908', '910', '912', '914', '916', '918', '920', '922', '924', '926', '928', '930', '932', '934', '936', '938', '1096', '1098', '1100', '1102', '1104', '1106', '1108', '1110', '1112', '1114', '1116', '1118', '1120', '1122', '1124', '1126', '1128', '1130', '1132', '1134', '1136', '1138', '1140', '1142', '1144', '1146', '1148', '1150', '1152', '1154', '1156', '1158', '1192', '1194', '1196', '1198', '1200', '1202', '1204', '1206', '1208', '1210', '1212', '1214', '1216', '1218', '1220', '1222', '1224', '1226', '1228', '1230', '1232', '1234', '1236', '1238', '1240', '1242', '1244', '1246', '1248', '1250', '1252', '1254', '1256', '1258', '1260', '1262', '1264', '1266', '1268', '1270', '1272', '1274', '1276', '1278', '1280', '1282', '1284', '1286', '1288', '1290', '1292', '1294', '1296', '1298', '1300', '1302', '1304', '1306', '1308', '1310', '1312', '1314', '1316', '1318', '1320', '1322', '1324', '1326', '1328', '1330', '1332', '1334', '1336', '1338', '1340', '1342', '1344', '1346', '1348', '1350', '1352', '1354', '1356', '1358', '1360', '1362', '1364', '1366', '1368', '1370', '1372', '1374', '1376', '1378', '1380', '1382', '1384', '1386', '1388', '1390', '1392', '1394', '1396', '1398', '1400', '1402', '1404', '1406', '1408', '1410', '1412', '1414', '1416', '1418', '1420', '1422', '1424', '1426', '1428', '1430', '1432', '1434', '1436', '1438', '1440', '1442', '1444', '1446', '1448', '1450', '1452', '1454', '1456', '1458', '1460', '1462', '1464', '1466', '1468', '1470', '1472', '1474', '1476', '1478', '1480', '1482', '1484', '1486', '1488', '1490', '1492', '1494', '1496', '1498', '1500', '1502', '1504', '1506', '1508', '1510', '1512', '1514', '1516', '1518', '1520', '1522', '1524', '1526', '1528', '1530', '1532', '1534', '1536', '1538', '1540', '1542', '1544', '1546', '1548', '1550', '1714', '1716', '1718', '1720', '1722', '1724', '1726', '1728', '1730', '1732', '1734', '1736', '1738', '1740', '1742', '1744', '1746', '1748', '1766', '1768', '1770', '1772', '1924', '1926', '1928', '1930', '1932', '1934', '1936', '1938', '1940', '1942', '1944', '1946', '1948', '1950', '1952', '1954', '1956', '1958', '1960', '1962', '1964', '1966', '1968', '1970', '1972', '1974', '1976', '1978', '1980', '1982', '1984', '1986', '1988', '1990', '1992', '1994', '1996', '1998', '2000', '2002', '2004', '2006', '2008', '2056', '2460', '2462', '2464', '2466', '2468', '2470', '2472', '2474', '2476', '2478', '2480', '2482', '2484', '2486', '2488', '2490', '2492', '2494', '2496', '2498']
	s502_msc_sg_vip = ['700', '702', '704', '706', '708', '710', '712', '714', '716', '718', '720', '722', '724', '726', '728', '730', '732', '734', '736', '738', '740', '742', '744', '746', '748', '750', '752', '754', '756', '758', '760', '762', '764', '766', '768', '770', '772', '774', '776', '778', '780', '782', '784', '786', '788', '790', '792', '794', '796', '798', '800', '802', '804', '806', '808', '810', '812', '814', '816', '818', '820', '822', '824', '826', '828', '830', '832', '834', '836', '838', '840', '842', '844', '846', '848', '858', '860', '862', '864', '866', '868', '870', '872', '874', '876', '878', '880', '882', '884', '886', '888', '890', '892', '894', '896', '898', '900', '902', '904', '906', '908', '910', '912', '914', '916', '918', '920', '922', '924', '926', '928', '930', '932', '934', '936', '938', '940', '942', '944', '946', '948', '950', '952', '954', '956', '958', '960', '962', '964', '966', '968', '970', '972', '974', '976', '1104', '1106', '1108', '1110', '1112', '1114', '1116', '1118', '1120', '1122', '1124', '1126', '1128', '1130', '1132', '1134', '1136', '1138', '1140', '1142', '1144', '1146', '1148', '1150', '1152', '1154', '1156', '1158', '1160', '1162', '1164', '1166', '1168', '1170', '1172', '1174', '1176', '1178', '1180', '1182', '1184', '1186', '1188', '1190', '1192', '1194', '1196', '1198', '1200', '1202', '1204', '1206', '1208', '1312', '1314', '1316', '1318', '1320', '1322', '1324', '1326', '1328', '1330', '1332', '1334', '1336', '1338', '1340', '1342', '1344', '1346', '1348', '1350', '1352', '1354', '1356', '1358', '1360', '1362', '1364', '1366', '1368', '1370', '1372', '1374', '1376', '1378', '1380', '1382', '1384', '1386', '1388', '1390', '1392', '1394', '1396', '1398', '1400', '1402', '1404', '1406', '1408', '1410', '1412', '1414', '1416', '1418', '1478', '1480', '1482', '1484', '1486', '1488', '1490', '1492', '1494', '1496', '1498', '1500', '1502', '1504', '1506', '1532', '1534', '1536', '1538', '1548', '1550', '1552', '1554', '1556', '1558', '1560', '1562', '1564', '1566', '1568', '1570', '1572', '1574', '1576', '1578', '1580', '1582', '1584', '1586', '1588', '1590', '1592', '1594', '1596', '1598', '1600', '1602', '1604', '1606', '1608', '1610', '1612', '1614', '1616', '1618', '1620', '1622', '1624', '1626', '1628', '1630', '1632', '1634', '1636', '1638', '1640', '1642', '1644', '1646', '1648', '1650', '1652', '1654', '1656', '1658', '1660', '1662', '1664', '1666', '1668', '1670', '1672', '1674', '1676', '1678', '1680', '1682', '1684', '1728', '1730', '1732', '1798', '1800', '1802', '1804', '1806', '1808', '1810', '1812', '1814', '1816', '1818', '1820', '1822', '1824', '1826', '1828', '1830', '1832', '1834', '1836', '1838', '1840', '1842', '1844', '1846', '1848', '1850', '1852', '1854', '1856', '1858', '1860', '1862', '1926', '1928', '1930', '1932', '1934', '1936', '1938', '1954', '1956', '1958', '1960', '1962', '1964', '1966', '1968', '1970', '1972', '1974', '1976', '1978', '1980', '1982', '1984', '1986', '1988', '1990', '1992', '1994', '1996', '1998', '2000', '2002', '2004', '2006', '2008', '2010', '2012', '2014', '2016', '2018', '2020', '2022', '2024', '2026', '2072', '2074', '2076', '2078', '2080', '2082', '2084', '2086', '2088', '2090', '2092', '2094', '2096', '2098', '2100', '2102', '2104', '2106', '2108', '2110', '2112', '2114', '2116', '2118', '2120', '2122', '2124', '2126', '2128', '2130', '2132', '2134', '2136', '2138', '2140', '2142', '2144', '2146', '2148', '2150', '2152', '2154', '2156', '2158', '2160', '2162', '2164', '2192', '2194', '2196', '2198', '2200', '2202', '2204', '2206', '2208', '2210', '2212', '2214', '2216', '2218', '2220', '2222', '2224', '2226', '2228', '2230', '2232', '2234', '2236', '2238', '2240', '2242', '2244', '2246', '2248', '2250', '2252', '2254', '2256', '2258', '2260', '2262', '2264', '2266', '2268', '2270', '2272', '2274', '2276', '2496', '2498']

	if i == 1:
		return n1
	elif i == 2:
		n1.extend(n2)
		return n1
	elif i == 3:
		n1.extend(n3)
		return n1
	elif i == 4:
		n1.extend(n4)
		return n1
	elif i == 5:
		n1.extend(n5)
		return n1
	elif i == 6:
		n1.extend(n6)
		return n1
	elif i == 7:
		n1.extend(n7)
		return n1
	elif i == 8:
		return w1
	elif i == 9:
		return w2
	elif i == 10:
		return transform_to_index(s31_raw)
	elif i == 11:
		return transform_to_index(s13_raw)
	elif i == 12:
		return transform_to_index(s67_msc)
	elif i == 13:
		return transform_to_index(s168_msc_sg)
	elif i == 14:
		return transform_to_index(s78_sg_msc)
	elif i == 15:
		return transform_to_index(s353_raw_vip)
	elif i == 16:
		return transform_to_index(s522_sg_msc_vip)
	elif i == 17:
		return transform_to_index(s418_msc_vip)
	elif i == 18:
		return transform_to_index(s502_msc_sg_vip)
	else:
		raise ValueError('GET OUT OFF HERE!!!')

def main():
	x = np.load('./outputdata/nir_a1_b1_b33_700_2498.npy', allow_pickle = True)
	y = np.load('./outputdata/flavor_a1_b1_b33.npy', allow_pickle = True)[:, [0, 1, 2, 8, 11, 12, 13, 14, 15, 16, 17]]
	
	#remove nan rows
	nan_idx = ~pd.isnull(y).any(axis = 1)
	x = x[nan_idx]
	y = y[nan_idx]

	train_x, test_x, train_y, test_y = train_test_split(x, y, test_size = 0.2, random_state = int(sys.argv[1])) #random_state = 18
	train_info = train_y[:, :2]
	test_info = test_y[:, :2]

	train_x = train_x[:, 2:].astype(np.float32)
	train_y = train_y[:, 2:].astype(np.int)
	test_x = test_x[:, 2:].astype(np.float32)
	test_y = test_y[:, 2:].astype(np.int)

	header = 'name,number,floral,fruity,S/F,veg.,other,roasted,spices,N/C,sweet'
	functions = [sg1222_msc, msc, msc_sg1222]
	
	'''
	Knn
	'''
	# print('Now is Knn!!!')
	# knn = Knn()
	# results_2 = []
	# for fn in functions:
	# 	for wc in range(1, 19):
	# 		for weight in ['uniform', 'distance']:
	# 			for n in range(1, 306):
	# 				results = [weight, n, fn.__name__, wc]
	# 				new_train_x, new_test_x = fn(train_x[:, wave_combination(wc)]), fn(test_x[:, wave_combination(wc)])
	# 				knn.train(new_train_x, train_y, weights = weight, n_neighbors = n)
	# 				pred_y = knn.predict(new_test_x)
	# 				recall, acc, class_recall, class_acc = evaluate(test_y, pred_y)
	# 				results.append(recall)
	# 				results.append(acc)
	# 				results.extend(class_recall)
	# 				results.extend(class_acc)
	# 				pred_y = np.hstack((test_info, pred_y))
	# 				np.savetxt(f'knn_{weight}_{n}_{fn.__name__}_{wc}.csv', pred_y, delimiter = ',', header = header, fmt = '%s, %s, %i, %i, %i, %i, %i, %i, %i, %i, %i')
	# 				results_2.append(results)
	# results_2 = np.asarray(results_2)
	# np.savetxt('knn.csv', results_2, delimiter = ',', header = 'weight,neighobrs,preprocessing,wave,recall,acc,floral,fruity,S/F,veg.,other,roasted,spices,N/C,sweet,floral,fruity,S/F,veg.,other,roasted,spices,N/C,sweet', fmt = '%s,'* 23 + '%s')
	# print('Knn is done!!!')

	'''
	Mlknn
	'''
	print('Now is Mlknn!!!')
	mlknn = Mlknn()
	for fn in functions:
		results_3 = []
		for wc in range(1, 19):
			for n in range(1, 306):
				results = [n, fn.__name__, wc]
				new_train_x, new_test_x = fn(train_x[:, wave_combination(wc)]), fn(test_x[:, wave_combination(wc)])
				mlknn.train(new_train_x, train_y, smooth = 1.0, n_neighbors = n)
				pred_y = mlknn.predict(new_test_x)
				recall, acc, class_recall, class_acc = evaluate(test_y, pred_y)
				results.append(recall)
				results.append(acc)
				results.extend(class_recall)
				results.extend(class_acc)
				pred_y = np.hstack((test_info, pred_y))
				np.savetxt(f'mlknn_{n}_{fn.__name__}_{wc}.csv', pred_y, delimiter = ',', header = header, fmt = '%s, %s, %i, %i, %i, %i, %i, %i, %i, %i, %i')
				results_3.append(results)
		results_3 = np.asarray(results_3)
		np.savetxt(f'mlknn_{fn.__name__}.csv', results_3, delimiter = ',', header = 'neighobrs,preprocessing,wave,recall,acc,floral,fruity,S/F,veg.,other,roasted,spices,N/C,sweet,floral,fruity,S/F,veg.,other,roasted,spices,N/C,sweet', fmt = '%s,'* 22 + '%s')
	print('Mlknn is done!!!')

	'''
	Svm
	'''
	print('Now is Svm !!!')
	svm = Svm()
	for fn in functions:
		results_ = []
		for wc in range(1, 19):
			for kernel in ['rbf', 'poly', 'linear', 'sigmoid']:
				for c in [2 ** i for i in list(range(15, 26))]:
					results = [kernel, c, fn.__name__, wc]
					new_train_x, new_test_x = fn(train_x[:, wave_combination(wc)]), fn(test_x[:, wave_combination(wc)])
					svm.train(new_train_x, train_y, kernel = kernel, C = c)
					pred_y = svm.predict(new_test_x)
					recall, acc, class_recall, class_acc = evaluate(test_y, pred_y)
					results.append(recall)
					results.append(acc)
					results.extend(class_recall)
					results.extend(class_acc)
					pred_y = np.hstack((test_info, pred_y))
					np.savetxt(f'svm_{kernel}_{c}_{fn.__name__}_{wc}.csv', pred_y, delimiter = ',', header = header, fmt = '%s, %s, %i, %i, %i, %i, %i, %i, %i, %i, %i')
					results_.append(results)
		results_ = np.asarray(results_)
		np.savetxt(f'svm_{fn.__name__}.csv', results_, delimiter = ',', header = 'kernel,c,preprocessing,wave,recall,acc,floral,fruity,S/F,veg.,other,roasted,spices,N/C,sweet,floral,fruity,S/F,veg.,other,roasted,spices,N/C,sweet', fmt = '%s,'* 23 + '%s')
	print('Svm is done!!!')

if __name__ == '__main__':
	main()
